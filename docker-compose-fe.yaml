# This docker compose file is for convenient front-end development
# Workflow:
# $ docker compose -f docker-compose-fe.yaml up -d --build
# $ docker compose down
# The app will be available at http://localhost:3000/

services:
  # <<-- FRONTEND -->>
  app:
    image: node:16-alpine
    env_file:
      ./app/.env
    environment:
      - REACT_APP_MOVIE_SEARCH_MS=http://localhost:50172
      - REACT_APP_RECOMMENDATION_MS=http://localhost:50173
      - REACT_APP_USER_MS=http://localhost:50174
      - REACT_APP_WATCHLIST_MS=http://localhost:50175
      - REACT_APP_ANALYTICS_MS=http://localhost:50176
    command: >
      sh -c "cd /app && yarn install && yarn cache clean && yarn serve"
    volumes:
      - ./app:/app
    expose:
      - "3000"
    ports:
      - 3000:3000

  # <<-- BACKEND -->>
  movie-search-ms:
    build:
      context: ./backend/movie-search-ms/
      dockerfile: ../../fastapi.dockerfile
    ports:
      - 50172:80
  recommendation-ms:
    build:
      context: ./backend/recommendation-ms/
      dockerfile: ../../fastapi.dockerfile
    ports:
      - 50173:80
  user-ms:
    build:
      context: ./backend/user-ms/
      dockerfile: ../../fastapi.dockerfile
    ports:
      - 50174:80

  user-db:
    image: mysql:latest

  watchlist-ms:
    build:
      context: ./backend/watchlist-ms/
      dockerfile: ../../fastapi.dockerfile
    ports:
      - 50175:80
  watchlist-db:
    image: cassandra:latest
    healthcheck:
      test: ["CMD-SHELL", "[ $$(nodetool statusgossip) = running ]"]
      interval: 30s
      timeout: 10s
      retries: 5
  watchlist-db-setuper:
    image: cassandra:latest
    depends_on:
      watchlist-db:
        condition:
          service_healthy
    restart: "no"
    entrypoint: ["/setup_watchlist-db.sh"]
    volumes:
      - ./scripts/create_tables.cql:/create_tables.cql
      - ./scripts/setup_watchlist-db.sh:/setup_watchlist-db.sh

  analytics-ms:
    build:
      context: ./backend/analytics-ms/
      dockerfile: ../../fastapi.dockerfile
    ports:
      - 50176:80
  analytics-db:
    image: neo4j:latest
